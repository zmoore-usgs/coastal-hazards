---
include:
  - project: "ctek/gitlab/pipeline/templates"
    file: "linting/dockerfile-lint-template.yml"
    ref: 1.0.12

stages:
  - .pre
  - lint
  - build

.build_functionality:
  stage: build
  image: docker:stable-git
  services:
    - docker:stable-dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build --tag $CI_REGISTRY_IMAGE/$IMAGE_NAME:latest -f $IMAGE_NAME/Dockerfile.gitlab .
  after_script:
    - docker push $CI_REGISTRY_IMAGE/$IMAGE_NAME:latest
  rules:
    - changes:
      - "$IMAGE_NAME/*"
      when: on_success
    - if: $CI_COMMIT_TAG
      when: always
    - when: on_success


build dependencies:
  stage: .pre
  image: docker:stable-git
  services:
    - docker:stable-dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build --tag $CI_REGISTRY_IMAGE:dependencies -f Docker/dependencies/Dockerfile .
  after_script:
    - docker push $CI_REGISTRY_IMAGE:dependencies
  rules:
    - changes:
      - "**/pom.xml"
      - Docker/dependencies/Dockerfile
      - Docker/dependencies/artifactory-settings.xml
      - coastal-hazards-geoserver/Dockerfile.gitlab
      - coastal-hazards-liquibase/Dockerfile.gitlab
      - coastal-hazards-n52/Dockerfile.gitlab
      - coastal-hazards-portal/Dockerfile.gitlab

dockerfile:
  stage: lint
  extends: .dockerfile-lint-template
  allow_failure: false
  # rules:
  #   - if: $CI_COMMIT_TAG
  #     when: never
  #   - changes:
  #       - "**/Dockerfile*"
  #     when: on_success

portal:
  extends: .build_functionality
  variables:
    IMAGE_NAME: coastal-hazards-portal

n52:
  extends: .build_functionality
  variables:
    IMAGE_NAME: coastal-hazards-n52

geoserver:
  extends: .build_functionality
  variables:
    IMAGE_NAME: coastal-hazards-geoserver

liquibase:
  extends: .build_functionality
  variables:
    IMAGE_NAME: coastal-hazards-liquibase

rserve:
  stage: build
  image: docker:stable-git
  variables:
    IMAGE_NAME: rserve
  services:
    - docker:stable-dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build --tag $CI_REGISTRY_IMAGE/$IMAGE_NAME:latest -f Docker/$IMAGE_NAME/Dockerfile.gitlab .
  after_script:
    - docker push $CI_REGISTRY_IMAGE/$IMAGE_NAME:latest
  rules:
    - changes:
      - "Docker/rserve/*"
      when: on_success
    - if: $CI_COMMIT_TAG
      when: always
