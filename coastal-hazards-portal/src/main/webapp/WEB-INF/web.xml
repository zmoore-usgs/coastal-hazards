<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
	<display-name>Coastal Change Hazards Portal</display-name>
	<welcome-file-list>
		<welcome-file>/WEB-INF/jsp/ui/front/index.jsp</welcome-file>
	</welcome-file-list>
	<error-page>
		<location>/WEB-INF/jsp/server-error/index.jsp</location>
	</error-page>
	<!-- SERVLET -->
	<listener>
		<description>ServletContextListener</description>
		<listener-class>gov.usgs.cida.utilities.ShutdownListener</listener-class>
	</listener>
	<servlet>
		<servlet-name>GeoServerServlet</servlet-name>
		<servlet-class>gov.usgs.cida.proxy.cache.CachingProxyServlet</servlet-class>
		<init-param>
			<param-name>forward-url-param</param-name>
			<param-value>coastal-hazards.portal.geoserver.endpoint</param-value>
		</init-param>
		<init-param>
			<param-name>readTimeout</param-name>
			<param-value>300000</param-value>
		</init-param>
		<init-param>
			<param-name>proxy-cache-name-param</param-name>
			<param-value>coastal-hazards.portal.geoserver.cache.name</param-value>
		</init-param>
		<init-param>
			<param-name>ignored-server-response-headers</param-name>
			<param-value>expires,cache-control,age</param-value>
		</init-param>
		<init-param>
			<param-name>max-megabytes-on-disk</param-name>
			<param-value>8096</param-value>
		</init-param>
		<init-param>
			<param-name>cache-eternal</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>cache-max-entries</param-name>
			<param-value>1000000</param-value>
		</init-param>
	</servlet>
	<servlet>
		<servlet-name>ExternalGeoServerServlet</servlet-name>
		<servlet-class>gov.usgs.cida.proxy.AlternateProxyServlet</servlet-class>
		<init-param>
			<param-name>forward-url-param</param-name>
			<param-value>coastal-hazards.cidags.endpoint</param-value>
		</init-param>
		<init-param>
			<param-name>readTimeout</param-name>
			<param-value>300000</param-value>
		</init-param>
	</servlet>
	<servlet>
		<servlet-name>DiagnosticsServlet</servlet-name>
		<servlet-class>gov.usgs.cida.utilities.DiagnosticsServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>DiagnosticsServlet</servlet-name>
		<url-pattern>/diagnostics</url-pattern>
	</servlet-mapping>
	<servlet>
		<servlet-name>StPeteArcServerServlet</servlet-name>
		<servlet-class>gov.usgs.cida.proxy.AlternateProxyServlet</servlet-class>
		<init-param>
			<param-name>forward-url-param</param-name>
			<param-value>coastal-hazards.stpetearcserver.endpoint</param-value>
		</init-param>
		<init-param>
			<param-name>readTimeout</param-name>
			<param-value>300000</param-value>
		</init-param>
	</servlet>
	<servlet>
		<servlet-name>MarineArcServerServlet</servlet-name>
		<servlet-class>gov.usgs.cida.proxy.AlternateProxyServlet</servlet-class>
		<init-param>
			<param-name>forward-url-param</param-name>
			<param-value>coastal-hazards.marine.endpoint</param-value>
		</init-param>
		<init-param>
			<param-name>readTimeout</param-name>
			<param-value>300000</param-value>
		</init-param>
	</servlet>
	<!-- MAPPING -->
	<servlet-mapping>
		<servlet-name>GeoServerServlet</servlet-name>
		<url-pattern>/geoserver/*</url-pattern>
		<url-pattern>/ui/item/geoserver/*</url-pattern>
		<url-pattern>/ui/view/geoserver/*</url-pattern>
		<url-pattern>/ui/alias/geoserver/*</url-pattern>
		<url-pattern>/publish/item/geoserver/*</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>StPeteArcServerServlet</servlet-name>
		<url-pattern>/stpgis/*</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>MarineArcServerServlet</servlet-name>
		<url-pattern>/marine/*</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>ExternalGeoServerServlet</servlet-name>
		<url-pattern>/cidags/*</url-pattern>
	</servlet-mapping>
	
	<!-- Site Map JSP mapping -->
	<servlet>
		<servlet-name>SiteMapXml</servlet-name>
		<jsp-file>/WEB-INF/jsp/sitemap/sitemapxml.jsp</jsp-file>
	</servlet>
	<servlet-mapping>
		<servlet-name>SiteMapXml</servlet-name>
		<url-pattern>/sitemap.xml</url-pattern>  
	</servlet-mapping>
		<servlet>
		<servlet-name>SiteMapHtml</servlet-name>
		<jsp-file>/WEB-INF/jsp/sitemap/sitemap.jsp</jsp-file>
	</servlet>
	<servlet-mapping>
		<servlet-name>SiteMapHtml</servlet-name>
		<url-pattern>/sitemap</url-pattern>  
	</servlet-mapping>
	
	<!-- Help Page -->
	<servlet>
		<servlet-name>InfoPage</servlet-name>
		<jsp-file>/WEB-INF/jsp/ui/info/index.jsp</jsp-file>
	</servlet>
	<servlet-mapping>
		<servlet-name>InfoPage</servlet-name>
		<url-pattern>/info</url-pattern>  
		<url-pattern>/info/</url-pattern>  
	</servlet-mapping>
	
	<!-- Security -->
	<!-- Override the default Keycloak Tomcat Adapter Config Resolver with our implementation -->
	<context-param>
        <param-name>keycloak.config.resolver</param-name>
        <param-value>gov.usgs.cida.coastalhazards.rest.security.KeycloakRuntimeConfigResolver</param-value>
    </context-param>
	<security-constraint>
		<web-resource-collection>
			<web-resource-name>Secure the publishing endpoint for everything</web-resource-name>
			<url-pattern>/publish/*</url-pattern>
		</web-resource-collection>
		<web-resource-collection>
			<web-resource-name>Secure the data endpoints for everything but GET</web-resource-name>
			<url-pattern>/data/*</url-pattern>
			<http-method>DELETE</http-method>
			<http-method>PUT</http-method>
			<http-method>POST</http-method>
			<http-method>UPDATE</http-method>
		</web-resource-collection>
		<web-resource-collection>
			<web-resource-name>Secure the storm template endpoints for everything</web-resource-name>
			<url-pattern>/data/template/storm/*</url-pattern>
		</web-resource-collection>
		<web-resource-collection>
			<web-resource-name>Secure the data/view endpoint for everything but GET and POST</web-resource-name>
			<url-pattern>/data/view/*</url-pattern>
			<http-method>PUT</http-method>
			<http-method>DELETE</http-method>
			<http-method>UPDATE</http-method>
		</web-resource-collection>
		<user-data-constraint>
			<transport-guarantee>CONFIDENTIAL</transport-guarantee>
		</user-data-constraint>
		<!-- Let any role through at the Keycloak Authorization level, 
			 we handle roles dynamically in the Java Code with our own filter -->
		<auth-constraint>
			<role-name>*</role-name>
		</auth-constraint>
	</security-constraint>

	<!-- Configure the login method to use Keycloak -->
	<login-config>
		<auth-method>KEYCLOAK</auth-method>
		<realm-name>This is required but not used currently by the Keycloak Tomcat 8 Adapter</realm-name>
	</login-config>

	<!-- Auth Constraint Roles must be defined when using wildcards -->
	<security-role>
		<role-name>*</role-name>
	</security-role>
</web-app>
